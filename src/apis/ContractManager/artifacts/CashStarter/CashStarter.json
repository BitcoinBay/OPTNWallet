{
  "contractName": "CashStarter",
  "constructorInputs": [],
  "abi": [
    {
      "name": "pledge",
      "inputs": [
        {
          "name": "pledgeAmount",
          "type": "int"
        }
      ]
    },
    {
      "name": "externalFunction",
      "inputs": []
    }
  ],
  "bytecode": "OP_DUP OP_0 OP_NUMEQUAL OP_IF OP_INPUTINDEX OP_0 OP_NUMEQUALVERIFY OP_TXINPUTCOUNT OP_2 OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_LESSTHANOREQUAL OP_VERIFY OP_OVER 1027 OP_GREATERTHANOREQUAL OP_VERIFY OP_OVER ffffffffff7f OP_LESSTHANOREQUAL OP_VERIFY OP_0 OP_UTXOTOKENCATEGORY 64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 OP_2 OP_CAT OP_EQUALVERIFY OP_1 OP_UTXOVALUE e02e OP_GREATERTHANOREQUAL OP_VERIFY OP_1 OP_UTXOTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_1 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENAMOUNT OP_0 OP_NUMEQUALVERIFY OP_1 OP_OUTPUTVALUE e803 OP_NUMEQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_DROP OP_EQUALVERIFY OP_0 OP_UTXOTOKENCOMMITMENT 1f OP_SPLIT OP_NIP OP_4 OP_SPLIT OP_DUP ffffffffff OP_EQUAL OP_NOT OP_VERIFY OP_SWAP OP_BIN2NUM OP_1ADD OP_DUP ffffff7f OP_LESSTHANOREQUAL OP_VERIFY OP_0 OP_UTXOTOKENCOMMITMENT 1a OP_SPLIT OP_NIP OP_4 OP_SPLIT OP_DROP OP_1 OP_OUTPUTTOKENCOMMITMENT OP_5 OP_PICK OP_6 OP_NUM2BIN OP_0 15 OP_NUM2BIN OP_CAT OP_ROT OP_CAT OP_2 OP_PICK OP_4 OP_NUM2BIN OP_CAT OP_3 OP_PICK OP_CAT OP_EQUALVERIFY OP_0 OP_UTXOTOKENCOMMITMENT 1f OP_SPLIT OP_DROP OP_0 OP_OUTPUTTOKENCOMMITMENT OP_SWAP OP_ROT OP_4 OP_NUM2BIN OP_CAT OP_ROT OP_CAT OP_EQUALVERIFY OP_0 OP_OUTPUTBYTECODE OP_0 OP_UTXOBYTECODE OP_EQUALVERIFY OP_0 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY OP_EQUALVERIFY OP_0 OP_OUTPUTVALUE OP_0 OP_UTXOVALUE OP_3 OP_ROLL OP_ADD OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENAMOUNT OP_0 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_NUMEQUAL OP_IF OP_2 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_2 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_ENDIF OP_DROP OP_1 OP_ELSE OP_1 OP_NUMEQUALVERIFY OP_INPUTINDEX OP_1 OP_NUMEQUALVERIFY OP_0 OP_UTXOTOKENCATEGORY 64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 OP_2 OP_CAT OP_EQUAL OP_ENDIF",
  "source": "pragma cashscript ^0.10.0;\r\n\r\ncontract CashStarter() {\r\n    function pledge(int pledgeAmount) {\r\n        require(this.activeInputIndex == 0);\r\n        require(tx.inputs.length == 2);\r\n        require(tx.outputs.length <= 3);\r\n        require(pledgeAmount >= 10000);\r\n        require(pledgeAmount <= 140737488355327);\r\n        require(tx.inputs[0].tokenCategory == 0x64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 + 0x02);\r\n        require(tx.inputs[1].value >= 12000);\r\n        require(tx.inputs[1].tokenCategory == 0x);\r\n\r\n        require(tx.outputs[1].lockingBytecode == tx.inputs[1].lockingBytecode);\r\n        require(tx.outputs[1].tokenAmount == 0);\r\n        require(tx.outputs[1].value == 1000);\r\n        require(tx.outputs[1].tokenCategory == tx.inputs[0].tokenCategory.split(32)[0]);\r\n\r\n        bytes4 pledgeID, bytes5 campaignID = tx.inputs[0].nftCommitment.split(31)[1].split(4);\r\n        require(campaignID != 0xFFFFFFFFFF);\r\n        int newPledgeID = int(pledgeID) + 1;\r\n        require(newPledgeID <= 2147483647);\r\n        bytes endBlock = tx.inputs[0].nftCommitment.split(26)[1].split(4)[0];\r\n        require(tx.outputs[1].nftCommitment == bytes6(pledgeAmount) + bytes21(0) + endBlock + bytes4(newPledgeID) + campaignID);\r\n\r\n        bytes restCommitment = tx.inputs[0].nftCommitment.split(31)[0];\r\n        require(tx.outputs[0].nftCommitment == restCommitment + bytes4(newPledgeID) + campaignID);\r\n        require(tx.outputs[0].lockingBytecode == tx.inputs[0].lockingBytecode);\r\n        require(tx.outputs[0].tokenCategory == tx.inputs[0].tokenCategory);\r\n        require(tx.outputs[0].value == tx.inputs[0].value + pledgeAmount);\r\n        require(tx.outputs[0].tokenAmount == tx.inputs[0].tokenAmount);\r\n\r\n        if (tx.outputs.length == 3) {\r\n            require(tx.outputs[2].lockingBytecode == tx.inputs[1].lockingBytecode);\r\n            require(tx.outputs[2].tokenCategory == 0x);\r\n        }\r\n    }\r\n\r\n    function externalFunction() {\r\n        require(this.activeInputIndex == 1);\r\n        require(tx.inputs[0].tokenCategory == 0x64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 + 0x02);\r\n    }\r\n}\r\n",
  "debug": {
    "bytecode": "0079009c63c0009c69c3529c69c453a1695179021027a269517906ffffffffff7fa16900ce2064c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748527e876951c602e02ea26951ce00876951cd51c7876951d3009c6951cc02e8039c6951d100ce01207f75876900cf011f7f77547f007905ffffffffff879169517a815193007904ffffff7fa16900cf011a7f77547f7551d255795680000115807e527a7e527954807e53797e876900cf011f7f7500d2517a527a54807e527a7e876900cd00c7876900d100ce876900cc00c6537a939c6900d300d09c69c4539c6352cd51c7876952d100876968517767007a519c69c0519c6900ce2064c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748527e8768",
    "sourceMap": "4:4:37:5;;;;;5:16:5:37;:41::42;:16:::1;:8::44;6:16:6:32:0;:36::37;:16:::1;:8::39;7:16:7:33:0;:37::38;:16:::1;:8::40;8:16:8:28:0;;:32::37;:16:::1;:8::39;9:16:9:28:0;;:32::47;:16:::1;:8::49;10:26:10:27:0;:16::42;:46::112;:115::119;:46:::1;:16;:8::121;11:26:11:27:0;:16::34;:38::43;:16:::1;:8::45;12:26:12:27:0;:16::42;:46::48;:16:::1;:8::50;14:27:14:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;15:27:15:28:0;:16::41;:45::46;:16:::1;:8::48;16:27:16:28:0;:16::35;:39::43;:16:::1;:8::45;17:27:17:28:0;:16::43;:57::58;:47::73;:80::82;:47::83:1;:::86;:16;:8::88;19:55:19:56:0;:45::71;:78::80;:45::81:1;:::84;:91::92:0;:45::93:1;20:16:20:26:0;;:30::42;:16:::1;;:8::44;21:30:21:38:0;;:26::39:1;:42::43:0;:26:::1;22:16:22:27:0;;:31::41;:16:::1;:8::43;23:35:23:36:0;:25::51;:58::60;:25::61:1;:::64;:71::72:0;:25::73:1;:::76;24:27:24:28:0;:16::43;:54::66;;:47::67:1;;:78::79:0;:70::80:1;;:47;:83::91:0;;:47:::1;:101::112:0;;:94::113:1;;:47;:116::126:0;;:47:::1;:16;:8::128;26:41:26:42:0;:31::57;:64::66;:31::67:1;:::70;27:27:27:28:0;:16::43;:47::61;;:71::82;;:64::83:1;;:47;:86::96:0;;:47:::1;:16;:8::98;28:27:28:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;29:27:29:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;30:27:30:28:0;:16::35;:49::50;:39::57;:60::72;;:39:::1;:16;:8::74;31:27:31:28:0;:16::41;:55::56;:45::69;:16:::1;:8::71;33:12:33:29:0;:33::34;:12:::1;:36:36:9:0;34:31:34:32;:20::49;:63::64;:53::81;:20:::1;:12::83;35:31:35:32:0;:20::47;:51::53;:20:::1;:12::55;33:36:36:9;4:4:37:5;;;39::42::0;;;;;40:16:40:37;:41::42;:16:::1;:8::44;41:26:41:27:0;:16::42;:46::112;:115::119;:46:::1;:16;3:0:43:1",
    "logs": [],
    "requireMessages": []
  },
  "compiler": {
    "name": "cashc",
    "version": "0.10.0-next.5"
  },
  "updatedAt": "2024-06-29T00:26:25.893Z"
}