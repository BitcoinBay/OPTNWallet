{
  "contractName": "CashStarterCancel",
  "constructorInputs": [],
  "abi": [
    {
      "name": "cancel",
      "inputs": []
    }
  ],
  "bytecode": "OP_INPUTINDEX OP_0 OP_NUMEQUALVERIFY OP_TXINPUTCOUNT OP_3 OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_LESSTHANOREQUAL OP_VERIFY OP_1 OP_UTXOTOKENCATEGORY 64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 OP_2 OP_CAT OP_EQUALVERIFY OP_2 OP_UTXOTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_1 OP_UTXOTOKENCOMMITMENT 1a OP_SPLIT OP_DROP OP_6 OP_SPLIT OP_NIP OP_2 OP_UTXOBYTECODE 76a914 OP_ROT OP_CAT 88ac OP_CAT OP_EQUALVERIFY OP_0 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP ffffffffff OP_EQUALVERIFY OP_1 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP ffffffffff OP_EQUAL OP_NOT OP_VERIFY OP_0 OP_OUTPUTBYTECODE OP_0 OP_UTXOBYTECODE OP_EQUALVERIFY OP_0 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY OP_EQUALVERIFY OP_0 OP_OUTPUTTOKENAMOUNT OP_0 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENCOMMITMENT OP_0 OP_UTXOTOKENCOMMITMENT OP_EQUALVERIFY OP_0 OP_OUTPUTVALUE OP_0 OP_UTXOVALUE OP_NUMEQUALVERIFY OP_1 OP_UTXOVALUE e803 OP_NUMEQUAL OP_IF OP_1 OP_OUTPUTBYTECODE OP_2 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_1 OP_OUTPUTVALUE OP_2 OP_UTXOVALUE OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_2 OP_NUMEQUALVERIFY OP_ELSE OP_1 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_1 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_DROP OP_1 OP_CAT OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENAMOUNT OP_1 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_1 OP_OUTPUTTOKENCOMMITMENT OP_1 OP_UTXOTOKENCOMMITMENT OP_EQUALVERIFY OP_1 OP_OUTPUTVALUE OP_1 OP_UTXOVALUE e803 OP_SUB OP_NUMEQUALVERIFY OP_2 OP_OUTPUTBYTECODE OP_2 OP_UTXOBYTECODE OP_EQUALVERIFY OP_2 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_2 OP_OUTPUTVALUE OP_2 OP_UTXOVALUE OP_NUMEQUALVERIFY OP_ENDIF OP_1",
  "source": "pragma cashscript ^0.10.0;\r\n\r\ncontract CashStarterCancel() {\r\n    function cancel() {\r\n        require(this.activeInputIndex == 0);\r\n        require(tx.inputs.length == 3);\r\n        require(tx.outputs.length <= 3);\r\n        require(tx.inputs[1].tokenCategory == 0x64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 + 0x02);\r\n        require(tx.inputs[2].tokenCategory == 0x);\r\n\r\n        bytes20 payoutAddress = bytes20(tx.inputs[1].nftCommitment.split(26)[0].split(6)[1]);\r\n        require(tx.inputs[2].lockingBytecode == new LockingBytecodeP2PKH(payoutAddress));\r\n\r\n        bytes masterID = tx.inputs[0].nftCommitment.split(35)[1];\r\n        require(masterID == 0xFFFFFFFFFF);\r\n\r\n        bytes campaignID = tx.inputs[1].nftCommitment.split(35)[1];\r\n        require(campaignID != 0xFFFFFFFFFF);\r\n\r\n        require(tx.outputs[0].lockingBytecode == tx.inputs[0].lockingBytecode);\r\n        require(tx.outputs[0].tokenCategory == tx.inputs[0].tokenCategory);\r\n        require(tx.outputs[0].tokenAmount == tx.inputs[0].tokenAmount);\r\n        require(tx.outputs[0].nftCommitment == tx.inputs[0].nftCommitment);\r\n        require(tx.outputs[0].value == tx.inputs[0].value);\r\n\r\n        if (tx.inputs[1].value == 1000) {\r\n            require(tx.outputs[1].lockingBytecode == tx.inputs[2].lockingBytecode);\r\n            require(tx.outputs[1].tokenCategory == 0x);\r\n            require(tx.outputs[1].value == tx.inputs[2].value);\r\n\r\n            require(tx.outputs.length == 2);\r\n\r\n        } else {\r\n            require(tx.outputs[1].lockingBytecode == tx.inputs[1].lockingBytecode);\r\n            require(tx.outputs[1].tokenCategory == tx.inputs[1].tokenCategory.split(32)[0] + 0x01);\r\n            require(tx.outputs[1].tokenAmount == tx.inputs[1].tokenAmount);\r\n            require(tx.outputs[1].nftCommitment == tx.inputs[1].nftCommitment);\r\n            require(tx.outputs[1].value == tx.inputs[1].value - 1000);\r\n\r\n            require(tx.outputs[2].lockingBytecode == tx.inputs[2].lockingBytecode);\r\n            require(tx.outputs[2].tokenCategory == 0x);\r\n            require(tx.outputs[2].value == tx.inputs[2].value);\r\n        }\r\n    }\r\n}\r\n",
  "debug": {
    "bytecode": "c0009c69c3539c69c453a16951ce2064c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748527e876952ce00876951cf011a7f75567f7752c70376a914527a7e0288ac7e876900cf01237f77007a05ffffffffff876951cf01237f77007a05ffffffffff87916900cd00c7876900d100ce876900d300d09c6900d200cf876900cc00c69c6951c602e8039c6351cd52c7876951d100876951cc52c69c69c4529c696751cd51c7876951d151ce01207f75517e876951d351d09c6951d251cf876951cc51c602e803949c6952cd52c7876952d100876952cc52c69c696851",
    "sourceMap": "5:16:5:37;:41::42;:16:::1;:8::44;6:16:6:32:0;:36::37;:16:::1;:8::39;7:16:7:33:0;:37::38;:16:::1;:8::40;8:26:8:27:0;:16::42;:46::112;:115::119;:46:::1;:16;:8::121;9:26:9:27:0;:16::42;:46::48;:16:::1;:8::50;11:50:11:51:0;:40::66;:73::75;:40::76:1;:::79;:86::87:0;:40::88:1;:::91;12:26:12:27:0;:16::44;:48::87;:73::86;;:48::87;;;:16:::1;:8::89;14:35:14:36:0;:25::51;:58::60;:25::61:1;:::64;15:16:15:24:0;;:28::40;:16:::1;:8::42;17:37:17:38:0;:27::53;:60::62;:27::63:1;:::66;18:16:18:26:0;;:30::42;:16:::1;;:8::44;20:27:20:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;21:27:21:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;22:27:22:28:0;:16::41;:55::56;:45::69;:16:::1;:8::71;23:27:23:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;24:27:24:28:0;:16::35;:49::50;:39::57;:16:::1;:8::59;26:22:26:23:0;:12::30;:34::38;:12:::1;:40:33:9:0;27:31:27:32;:20::49;:63::64;:53::81;:20:::1;:12::83;28:31:28:32:0;:20::47;:51::53;:20:::1;:12::55;29:31:29:32:0;:20::39;:53::54;:43::61;:20:::1;:12::63;31:20:31:37:0;:41::42;:20:::1;:12::44;33:15:43:9:0;34:31:34:32;:20::49;:63::64;:53::81;:20:::1;:12::83;35:31:35:32:0;:20::47;:61::62;:51::77;:84::86;:51::87:1;:::90;:93::97:0;:51:::1;:20;:12::99;36:31:36:32:0;:20::45;:59::60;:49::73;:20:::1;:12::75;37:31:37:32:0;:20::47;:61::62;:51::77;:20:::1;:12::79;38:31:38:32:0;:20::39;:53::54;:43::61;:64::68;:43:::1;:20;:12::70;40:31:40:32:0;:20::49;:63::64;:53::81;:20:::1;:12::83;41:31:41:32:0;:20::47;:51::53;:20:::1;:12::55;42:31:42:32:0;:20::39;:53::54;:43::61;:20:::1;:12::63;33:15:43:9;4:4:44:5",
    "logs": [],
    "requireMessages": []
  },
  "compiler": {
    "name": "cashc",
    "version": "0.10.0-next.5"
  },
  "updatedAt": "2024-06-29T00:36:07.617Z"
}