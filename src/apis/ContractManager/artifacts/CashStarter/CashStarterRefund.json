{
  "contractName": "CashStarterRefund",
  "constructorInputs": [],
  "abi": [
    {
      "name": "refund",
      "inputs": []
    }
  ],
  "bytecode": "OP_INPUTINDEX OP_0 OP_NUMEQUALVERIFY OP_TXINPUTCOUNT OP_3 OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_LESSTHANOREQUAL OP_VERIFY OP_0 OP_UTXOTOKENCATEGORY 64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 OP_2 OP_CAT OP_EQUALVERIFY OP_0 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP ffffffffff OP_EQUALVERIFY OP_1 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_SWAP OP_0 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_DROP OP_EQUALVERIFY OP_0 OP_EQUAL OP_NOT OP_VERIFY OP_2 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_SWAP OP_0 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_DROP OP_EQUALVERIFY OP_0 OP_EQUALVERIFY OP_1 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP OP_DUP ffffffffff OP_EQUAL OP_NOT OP_VERIFY OP_2 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP OP_EQUALVERIFY OP_2 OP_UTXOTOKENCOMMITMENT OP_6 OP_SPLIT OP_DROP OP_BIN2NUM OP_0 OP_OUTPUTBYTECODE OP_0 OP_UTXOBYTECODE OP_EQUALVERIFY OP_0 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY OP_EQUALVERIFY OP_0 OP_OUTPUTVALUE OP_0 OP_UTXOVALUE OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENAMOUNT OP_0 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENCOMMITMENT OP_0 OP_UTXOTOKENCOMMITMENT OP_EQUALVERIFY OP_1 OP_UTXOVALUE OP_OVER OP_LESSTHANOREQUAL OP_IF OP_1 OP_OUTPUTBYTECODE OP_2 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_1 OP_OUTPUTVALUE OP_1 OP_UTXOVALUE e803 OP_SUB OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_2 OP_NUMEQUALVERIFY OP_ELSE OP_1 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_1 OP_UTXOTOKENCATEGORY OP_EQUALVERIFY OP_1 OP_OUTPUTVALUE OP_1 OP_UTXOVALUE OP_2 OP_PICK OP_SUB OP_NUMEQUALVERIFY OP_1 OP_OUTPUTTOKENAMOUNT OP_1 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_1 OP_OUTPUTTOKENCOMMITMENT OP_1 OP_UTXOTOKENCOMMITMENT OP_EQUALVERIFY OP_2 OP_OUTPUTBYTECODE OP_2 OP_UTXOBYTECODE OP_EQUALVERIFY OP_2 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_2 OP_OUTPUTVALUE OP_OVER e803 OP_SUB OP_NUMEQUALVERIFY OP_ENDIF OP_DROP OP_1",
  "source": "pragma cashscript ^0.10.0;\r\n\r\ncontract CashStarterRefund() {\r\n    function refund() {\r\n        require(this.activeInputIndex == 0);\r\n        require(tx.inputs.length == 3);\r\n        require(tx.outputs.length <= 3);\r\n\r\n        require(tx.inputs[0].tokenCategory == 0x64c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748 + 0x02);\r\n        require(tx.inputs[0].nftCommitment.split(35)[1] == 0xFFFFFFFFFF);\r\n\r\n        bytes category, bytes capability = tx.inputs[1].tokenCategory.split(32);\r\n        require(category == tx.inputs[0].tokenCategory.split(32)[0]);\r\n        require(capability != 0x);\r\n\r\n        bytes category2, bytes capability2 = tx.inputs[2].tokenCategory.split(32); \r\n        require(category2 == tx.inputs[0].tokenCategory.split(32)[0]);\r\n        require(capability2 == 0x);\r\n\r\n        bytes campaignID = tx.inputs[1].nftCommitment.split(35)[1];\r\n        require(campaignID != 0xFFFFFFFFFF);\r\n\r\n        bytes refundID = tx.inputs[2].nftCommitment.split(35)[1];\r\n        require(campaignID == refundID);\r\n\r\n        int pledgeAmount = int(tx.inputs[2].nftCommitment.split(6)[0]);\r\n\r\n        require(tx.outputs[0].lockingBytecode == tx.inputs[0].lockingBytecode);\r\n        require(tx.outputs[0].tokenCategory == tx.inputs[0].tokenCategory);\r\n        require(tx.outputs[0].value == tx.inputs[0].value);\r\n        require(tx.outputs[0].tokenAmount == tx.inputs[0].tokenAmount);\r\n        require(tx.outputs[0].nftCommitment == tx.inputs[0].nftCommitment);\r\n\r\n        if (tx.inputs[1].value <= pledgeAmount) {\r\n            require(tx.outputs[1].lockingBytecode == tx.inputs[2].lockingBytecode);\r\n            require(tx.outputs[1].tokenCategory == 0x);\r\n            require(tx.outputs[1].value == tx.inputs[1].value - 1000);\r\n\r\n            require(tx.outputs.length == 2);\r\n\r\n        } else {\r\n            require(tx.outputs[1].lockingBytecode == tx.inputs[1].lockingBytecode);\r\n            require(tx.outputs[1].tokenCategory == tx.inputs[1].tokenCategory);\r\n            require(tx.outputs[1].value == tx.inputs[1].value - pledgeAmount);\r\n            require(tx.outputs[1].tokenAmount == tx.inputs[1].tokenAmount);\r\n            require(tx.outputs[1].nftCommitment == tx.inputs[1].nftCommitment);\r\n\r\n            require(tx.outputs[2].lockingBytecode == tx.inputs[2].lockingBytecode);\r\n            require(tx.outputs[2].tokenCategory == 0x);\r\n            require(tx.outputs[2].value == pledgeAmount - 1000);\r\n        }\r\n    }\r\n}\r\n",
  "debug": {
    "bytecode": "c0009c69c3539c69c453a16900ce2064c9ea104e07d9099bc3cdcb2a0035286773790c40dbcb0ae67068b1b8453748527e876900cf01237f7705ffffffffff876951ce01207f517a00ce01207f758769007a0087916952ce01207f517a00ce01207f758769007a00876951cf01237f77007905ffffffffff87916952cf01237f77517a517a876952cf567f758100cd00c7876900d100ce876900cc00c69c6900d300d09c6900d200cf876951c65179a16351cd52c7876951d100876951cc51c602e803949c69c4529c696751cd51c7876951d151ce876951cc51c65279949c6951d351d09c6951d251cf876952cd52c7876952d100876952cc517902e803949c69685177",
    "sourceMap": "5:16:5:37;:41::42;:16:::1;:8::44;6:16:6:32:0;:36::37;:16:::1;:8::39;7:16:7:33:0;:37::38;:16:::1;:8::40;9:26:9:27:0;:16::42;:46::112;:115::119;:46:::1;:16;:8::121;10:26:10:27:0;:16::42;:49::51;:16::52:1;:::55;:59::71:0;:16:::1;:8::73;12:53:12:54:0;:43::69;:76::78;:43::79:1;13:16:13:24:0;;:38::39;:28::54;:61::63;:28::64:1;:::67;:16;:8::69;14:16:14:26:0;;:30::32;:16:::1;;:8::34;16:55:16:56:0;:45::71;:78::80;:45::81:1;17:16:17:25:0;;:39::40;:29::55;:62::64;:29::65:1;:::68;:16;:8::70;18:16:18:27:0;;:31::33;:16:::1;:8::35;20:37:20:38:0;:27::53;:60::62;:27::63:1;:::66;21:16:21:26:0;;:30::42;:16:::1;;:8::44;23:35:23:36:0;:25::51;:58::60;:25::61:1;:::64;24:16:24:26:0;;:30::38;;:16:::1;:8::40;26:41:26:42:0;:31::57;:64::65;:31::66:1;:::69;:27::70;28::28:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;29:27:29:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;30:27:30:28:0;:16::35;:49::50;:39::57;:16:::1;:8::59;31:27:31:28:0;:16::41;:55::56;:45::69;:16:::1;:8::71;32:27:32:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;34:22:34:23:0;:12::30;:34::46;;:12:::1;:48:41:9:0;35:31:35:32;:20::49;:63::64;:53::81;:20:::1;:12::83;36:31:36:32:0;:20::47;:51::53;:20:::1;:12::55;37:31:37:32:0;:20::39;:53::54;:43::61;:64::68;:43:::1;:20;:12::70;39:20:39:37:0;:41::42;:20:::1;:12::44;41:15:51:9:0;42:31:42:32;:20::49;:63::64;:53::81;:20:::1;:12::83;43:31:43:32:0;:20::47;:61::62;:51::77;:20:::1;:12::79;44:31:44:32:0;:20::39;:53::54;:43::61;:64::76;;:43:::1;:20;:12::78;45:31:45:32:0;:20::45;:59::60;:49::73;:20:::1;:12::75;46:31:46:32:0;:20::47;:61::62;:51::77;:20:::1;:12::79;48:31:48:32:0;:20::49;:63::64;:53::81;:20:::1;:12::83;49:31:49:32:0;:20::47;:51::53;:20:::1;:12::55;50:31:50:32:0;:20::39;:43::55;;:58::62;:43:::1;:20;:12::64;41:15:51:9;4:4:52:5;",
    "logs": [],
    "requireMessages": []
  },
  "compiler": {
    "name": "cashc",
    "version": "0.10.0-next.5"
  },
  "updatedAt": "2024-06-29T00:40:21.450Z"
}